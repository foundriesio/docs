**Artifacts:**

.. important::
    If you are using a prebuilt Target, your artifacts may begin with ``lmp-base-console-image`` instead.

.. parsed-literal::

     └── |ARCH|
         ├── lmp-factory-image-|MACHINE|.wic.gz
         ├── other
         │   └── lmp-factory-image-|MACHINE|.wic.qcow2 # optional
         └── |FIRMWARE_BLOB|

.. note::
    You can fetch either the compressed ``.wic.gz`` or the ``.qcow2`` artifact, you do not need both.
    Use the .qcow2 artifact if you wish to change the QEMU disk size.


Booting in QEMU
---------------

.. important:: These instructions require QEMU 5.2 or later.

.. note::
	Make sure to set the FIOCTL_FACTORY environment variable:

    .. parsed-literal::

        export FIOCTL_FACTORY=<factory>

#. List available Targets and decide on which to boot::

     fioctl targets list

#. Make a directory for the artifacts and ``cd`` into it:

   .. parsed-literal::

          mkdir -p lmp-qemu/|ARCH|
          cd lmp-qemu/|ARCH|

#. :ref:`Download the artifacts <gs-download>` needed for |ARCH|.
   These can be found under the :guilabel:`Targets` tab for your Factory.
   Resizable qcow2 images are located in the ``other`` folder.

#. `Optional`. Resize the qcow2 image:

   .. parsed-literal::

        qemu-img resize -f qcow2 lmp-factory-image-|MACHINE|.wic.qcow2 8G
   
   The above example resizes to 8G—set to meet your needs.

   .. tip::
       
       If you already have the wic file, you can use it to create a qcow image:

       .. parsed-literal::
            
            qemu-img create -f qcow2 -F raw -b lmp-factory-image-|MACHINE|.wic lmp-factory-image-|MACHINE|.wic.qcow2
      
      You can then use ``qemu-img resize`` as above.
            
 
#. The directory tree should now look like this:

   .. parsed-literal::

        lmp-qemu/
        └── |ARCH|
            ├── lmp-factory-image-|MACHINE|.wic
            ├── lmp-factory-image-|MACHINE|.wic.qcow2 # optional, needed if resizing is required
            └── |FIRMWARE_BLOB|

#. Run the QEMU script below against the artifacts inside of ``lmp-qemu/``.
   You can save this as ``run.sh`` inside the directory for convenience.

.. important::
    If you are using the qcow2 image, change the script so that:

       * ``file=`` is set as the qcow2 image name, i.e., lmp-factory-image-|MACHINE|.wic.qcow2
       * ``format=raw`` is replaced with ``format=qcow2``.
    
    For example:
       
       .. parsed-literal::

            |QEMU_COW|

.. note::
    The QEMU CLI passes the necessary flags and parameters to the appropriate qemu-system command.
    This includes path to the image, CPU, network, and other device information.
    For specifics, consult `QEMU's Documentation. <https://www.qemu.org/docs/master/index.html>`_

Booting Graphically
-------------------

In order to boot QEMU with an OpenGL capable virtual GPU (required for Wayland/Weston), add the following flags to the QEMU CLI:

.. parsed-literal::

     |QEMU_GUI_FLAGS|

Do not copy the ``-nographic`` flag at the end of the QEMU CLI below.

