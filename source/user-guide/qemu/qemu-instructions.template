**Artifacts:**

.. important::
    If you are using a prebuilt Target, your artifacts may begin with ``lmp-base-console-image`` instead.

.. parsed-literal::

     └── |ARCH|
         ├── lmp-factory-image-|MACHINE|.wic.gz
         └── |FIRMWARE_BLOB|

Booting in QEMU
---------------

.. important:: These instructions require QEMU 5.2 or later.

#. List available Targets and decide on which to boot::

     fioctl targets list

.. note::
    Make sure to set the FIOCTL_FACTORY environment variable so that you can list the target of the specified factory:

    .. parsed-literal::

        export FIOCTL_FACTORY=<factory>

#. Make a directory for the artifacts and ``cd`` into it:

   .. parsed-literal::

          mkdir -p lmp-qemu/|ARCH|
          cd lmp-qemu/|ARCH|

#. :ref:`Download the artifacts <gs-download>` needed for |ARCH|.
   These can be found under the :guilabel:`Targets` tab for your Factory.

#. Decompress the ``lmp-factory-image-|MACHINE|.wic.gz`` image file.

   .. parsed-literal::
        gunzip lmp-factory-image-|MACHINE|.wic.gz

#. `Optional`. Create and resize a qcow2 image:

   .. parsed-literal::
        qemu-img create -f qcow2 -F raw -b lmp-factory-image-|MACHINE|.wic |MACHINE|\_device1.qcow2
        qemu-img resize -f qcow2 |MACHINE|\_device1.qcow2 8G
   
   The above example creates and then resizes to 8G—set to meet your needs.

 
#. The directory tree should now look like this:

   .. parsed-literal::

        lmp-qemu/
        └── |ARCH|
            ├── lmp-factory-image-|MACHINE|.wic
            ├── |MACHINE|\_device1.qcow2 # optional, needed if resizing is required
            └── |FIRMWARE_BLOB|

#. Run the QEMU script below against the artifacts inside of ``lmp-qemu/``.
   You can save this as ``run.sh`` inside the directory for convenience.

.. important::
    Use  .qcow2 if you wish to change the QEMU disk size, or if you are looking to emulate multiple devices.
    Each image converted and subsequently run with QEMU will be recognized as a distinct device.
    If you are using the qcow2 image, change the script so that:

       * ``file=`` is set as the qcow2 image name, i.e., |MACHINE|\_device1.qcow2
       * ``format=raw`` is replaced with ``format=qcow2``.
    
    For example, replacing `MACHINE` appropriately:
       
       .. parsed-literal::

            |QEMU_COW|

.. note::
    The QEMU CLI passes the necessary flags and parameters to the appropriate qemu-system command.
    This includes path to the image, CPU, network, and other device information.
    For specifics, consult `QEMU's Documentation. <https://www.qemu.org/docs/master/index.html>`_

Booting Graphically
-------------------

This section shows how to boot QEMU with an OpenGL capable virtual GPU—required for Wayland/Weston.
To check the available options for your system, use the ``-display help`` flag:

.. parsed-literal::
   $ qemu-system-aarch64 -display help
   Available display backend types:
   none
   curses
   cocoa
   dbus

In general, adding the following flags to the QEMU CLI should work:

.. tabs::

   .. group-tab:: Linux

      .. parsed-literal::

         |QEMU_GUI_FLAGS_LINUX|

   .. group-tab:: macOS

      .. parsed-literal::

         |QEMU_GUI_FLAGS_MAC|

Also, do not copy the ``-nographic`` flag at the end of the QEMU CLI below.

.. note::

    You can also utilize the option ``-display default``.
    This attempts to use the default display type corresponding to the operating system on which you are running the command.


.. important::

   Specifying display options in QEMU does not make console-only images graphical.
   It just opens a potential graphical output window; interaction remains text-based.
   Images created with ``DISTRO=lmp-xwayland`` or ``DISTRO=lmp-wayland`` have graphical interfaces.
   For further information see: :ref:`LmP Wayland and LmP XWayland <ref-lmp-wayland-xwayland>`.

   If you are following :ref:`gs-flash-device` and downloading the console image, it will not boot with a graphical interface.
   See :ref:`Customizing the Distro <ref-customizing-the-distro>` to know how to build a new Target image.
   Ensure that you download the image with the interface, which is usually prefixed with ``lmp-factory-image``.

   Compatibility of the display options may vary, and not all options are supported on every host OS.
   Refer to the `QEMU Documentation <https://www.qemu.org/>`_ for more advanced configurations and options.

